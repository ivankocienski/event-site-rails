- content_for(:title) { "#{@event.name} - Event" }

%h1= @event.name

-# FIXME: multi-day events
%h2
  - if @event_instance.ends_at.present?
    From <em>#{@event_instance.starts_at.strftime(EventsHelper::DATE_TIME_FORMAT)}</em>
    to <em>#{@event_instance.ends_at.strftime(EventsHelper::DATE_TIME_FORMAT)}</em>
  - else
    At <em>#{@event_instance.starts_at.strftime(EventsHelper::DATE_TIME_FORMAT)}</em>
  on #{fancy_date_format(@event_instance.starts_at)}

%p
  By #{link_to @event.organizer.name, partner_path(@event.organizer)}
  - if @event.address.present?
    &mdash; (#{@event.address.to_s})

= format_for_content(@event.description)

- if @event.publisher_url.present?
  %p= external_link_to @event.publisher_url, text: 'More info'

- if @sibling_event_instances.any?
  %h2 This event in the future

  -# %p #{@sibling_event_instances.count} counts

  - @sibling_event_instances.each do |event_instance|
    %p= link_to "#{fancy_date_format(event_instance.starts_at)} at #{fancy_time_format(event_instance.starts_at)}", event_path(event_instance)

- if @upcoming_partner_events.present?
  %br
  %br
  %hr

  %h2 Other events from #{@event.organizer.name}

  .partner-event-list
    %h3= fancy_date_format(@upcoming_partner_events.first.starts_at)
    = render_partner_event_by_day_list(@upcoming_partner_events)
